export const answers = [{
  id: 1,
  title: `1. Что такое useEffect?`,
  text: `
Основная задача дать понять, что сейчас компонент что-то сделал.
Например, есть кнопка и нам надо понять, что действительно эта кнопка внедрилась в страницу т.е. она внедрена в страницу
и позже будет отображена. Также можем понять, что компонет был обновлен или удален.
Эти методы позволяют понять, что с  компонентом что-то произошло или что-то произойдет. Это методы жизненного цикла.

componentDidMount - компонет был отображен на странице, и я могу взять с сервера данные. Он говорит, что компонент был первый раз внедрен в страницу.
И больше этот метод вызываться не будет, до тех пор пока компонент не удалится и снова не отразится на странице.

componentDidUpdate - в компоненте были произошли какие-то изменения, тогда вызовется этот метод. Обновились, пропсы, свойства, state
и чтобы отловить эти действия можно использовать componentDidUpdate и получить старые данные, новые данные
и после чего выполнить любое действие (сверку, вычисление и т.д.) Должные передаваться в качестве параметров старые пропсы и новый стейт.

componentDidMount - компонет будет удален. Благодаря этому методу мы можем понять, что сейчас этот компонент будет удален.
И до того как компонент удалится мы можем выполнить какие-нибудь действие.

  `,
  url: `https://www.youtube.com/embed/slaaDOt0ZvM`,
  images: [`img/Image2.jpg`, `img/Image_3.jpg`, `img/Image_4.jpg`, `img/Image_5.jpg`,]
},
  {
    id: 2,
    title: `2. Примитивные типы данных в js?`,
    text: `Целые числа - byte, short, int, long.
Числа с плавающей точкой (иначе вещественные) - float, double.
Логический - boolean.
Символьный - char.`
  },
  {
    id: 3,
    title: `3. Различие между .map() и .forEach()?`,
    text: `.map() возвращает новый массив, а .forEach() - нет. Вот почему вы видите эту разницу в выходе. .forEach()
    работает только с каждым значением в массиве.`
  },
  {
    id: 4,
    title: `4. Как определить тип данных?`,
    text: `typeof 53; // "number"`
  },



  ]
